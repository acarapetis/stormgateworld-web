---
import type { LeaderboardEntryResponse, PlayerOpponentsStats } from "../../lib/api"
import { formatLeague } from "../../lib/format"
import { Tier, leagueInformations } from "../../lib/leagues"
import infernals from "../../assets/game/factions/infernals-small-glow.png"
import vanguard from "../../assets/game/factions/vanguard-small-glow.png"
import Widget from "../Widget.astro"
import { RankedBadge } from "../ui/RankedBadge"

interface Props {
  leaderboards: LeaderboardEntryResponse[]
}

const { leaderboards } = Astro.props
---

<Widget title="Progression">
  <div class="flex flex-col gap-4">
    {
      leaderboards.map((leaderboard) => {
        const information = leagueInformations[leaderboard.league!][leaderboard.tier as Tier]
        const points = leaderboard.points ? Math.round(leaderboard.points) : information.minPoint
        const minPoint = information.minPoint
        const maxPoint =
          information.nextLeague && information.nextTier
            ? leagueInformations[information.nextLeague][information.nextTier].minPoint - 1
            : 0

        if (!information.nextLeague || !information.nextTier) {
          return (
            <div class="m-2">
              <p class="mb-1 whitespace-nowrap text-sm font-black text-white  xs:text-base">Highest league reached!</p>
              <div class="w-100 relative mx-1 mt-2 h-1.5 flex-auto rounded-sm bg-green-600" />
            </div>
          )
        }
        return (
          <div class="m-2">
            <div class="mb-2 flex items-center gap-2.5 font-semibold text-gray-50">
              <img
                src={leaderboard.race === "infernals" ? infernals.src : vanguard.src}
                alt={leaderboard.race}
                class="size-7 min-w-7 flex-none object-contain"
              />
              Next league: {formatLeague({ league: information.nextLeague, tier: information.nextTier })}
            </div>
            <div class="relative mx-1 my-3 h-1.5 flex-auto rounded-sm bg-gray-500/80">
              <div
                class="absolute inset-0  rounded-l-sm bg-green-600"
                style={{
                  width: `${((points - minPoint) * 100) / (maxPoint - minPoint)}%`,
                }}
              />
            </div>
            <div class="flex justify-between">
              <div class="ml-2 flex items-center gap-1">
                <RankedBadge class="w-8" entry={{ league: leaderboard.league, tier: leaderboard.tier }} />
                <p>{minPoint}</p>
              </div>

              <div class="mr-3 flex items-center gap-1">
                <RankedBadge class="w-8" entry={{ league: information.nextLeague, tier: information.nextTier }} />
                <p>{maxPoint}</p>
              </div>
            </div>
          </div>
        )
      })
    }
  </div>
</Widget>
